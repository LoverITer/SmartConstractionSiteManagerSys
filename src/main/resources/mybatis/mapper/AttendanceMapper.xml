<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xust.iot.mapper.AttendanceMapper">
  <resultMap id="BaseResultMap" type="cn.edu.xust.iot.entity.po.Attendance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="stark_work_time" jdbcType="TIMESTAMP" property="starkWorkTime" />
    <result column="after_work_time" jdbcType="TIMESTAMP" property="afterWorkTime" />
    <result column="stark_work_device_id" jdbcType="INTEGER" property="starkWorkDeviceId" />
    <result column="after_work_device_id" jdbcType="INTEGER" property="afterWorkDeviceId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, stark_work_time, after_work_time, stark_work_device_id, after_work_device_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.xust.iot.entity.po.Attendance">
    insert into attendance (id, user_id, stark_work_time, 
      after_work_time, stark_work_device_id, after_work_device_id
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{starkWorkTime,jdbcType=TIMESTAMP}, 
      #{afterWorkTime,jdbcType=TIMESTAMP}, #{starkWorkDeviceId,jdbcType=INTEGER}, #{afterWorkDeviceId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.xust.iot.entity.po.Attendance">
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="starkWorkTime != null">
        stark_work_time,
      </if>
      <if test="afterWorkTime != null">
        after_work_time,
      </if>
      <if test="starkWorkDeviceId != null">
        stark_work_device_id,
      </if>
      <if test="afterWorkDeviceId != null">
        after_work_device_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="starkWorkTime != null">
        #{starkWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="afterWorkTime != null">
        #{afterWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starkWorkDeviceId != null">
        #{starkWorkDeviceId,jdbcType=INTEGER},
      </if>
      <if test="afterWorkDeviceId != null">
        #{afterWorkDeviceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.xust.iot.entity.po.Attendance">
    update attendance
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="starkWorkTime != null">
        stark_work_time = #{starkWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="afterWorkTime != null">
        after_work_time = #{afterWorkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="starkWorkDeviceId != null">
        stark_work_device_id = #{starkWorkDeviceId,jdbcType=INTEGER},
      </if>
      <if test="afterWorkDeviceId != null">
        after_work_device_id = #{afterWorkDeviceId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.xust.iot.entity.po.Attendance">
    update attendance
    set user_id = #{userId,jdbcType=INTEGER},
      stark_work_time = #{starkWorkTime,jdbcType=TIMESTAMP},
      after_work_time = #{afterWorkTime,jdbcType=TIMESTAMP},
      stark_work_device_id = #{starkWorkDeviceId,jdbcType=INTEGER},
      after_work_device_id = #{afterWorkDeviceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>