<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.xust.iot.mapper.AdminUserMapper">
    <resultMap id="BaseResultMap" type="cn.edu.xust.iot.model.entity.AdminUser">
        <id column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="power_type" jdbcType="VARCHAR" property="powerType"/>
    </resultMap>

    <resultMap id="AdminWithRoleNameResultMap" type="cn.edu.xust.iot.model.AdminUserModel">
        <id column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        admin_id, username, password, user_id,role_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_user
        where admin_id = #{adminId,jdbcType=INTEGER}
    </select>

    <select id="selectWithRoleName" resultMap="AdminWithRoleNameResultMap">
        SELECT admin_user.admin_id,
               username,
               PASSWORD,
               user_id,
               role_name,
               create_time,
               phone
        FROM admin_user
                     LEFT JOIN role ON admin_user.role_id = role.id
                     LEFT JOIN s_user ON admin_user.user_id = s_user.id
    </select>

    <select id="countAdminUsers" resultType="java.lang.Integer">
        SELECT count(*)
        FROM admin_user
                     LEFT JOIN role ON admin_user.role_id = role.id
                     LEFT JOIN s_user ON admin_user.user_id = s_user.id
    </select>

    <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select *
        from admin_user
        where username = #{username}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from admin_user
        where admin_id = #{adminId,jdbcType=INTEGER}
    </delete>

    <delete id="batchDeleteByPrimaryKey" parameterType="java.util.List">
        delete from admin_user where admin_id in
        <foreach item="adminUserId" collection="adminUserIds" open="(" separator="," close=")">
            #{adminUserId}
        </foreach>
    </delete>

    <insert id="insert" parameterType="cn.edu.xust.iot.model.entity.AdminUser">
        insert into admin_user (username, password, user_id)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{userId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="cn.edu.xust.iot.model.entity.AdminUser">
        insert into admin_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="roleId != null">
                role_id
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.xust.iot.model.entity.AdminUser">
        update admin_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                role_id=#{roleId,jdbcType=INTEGER}
            </if>
        </set>
        where admin_id = #{adminId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.xust.iot.model.entity.AdminUser">
        update admin_user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            user_id  = #{userId,jdbcType=INTEGER},
            role_id  = #{roleId,jdbcType=INTEGER}
        where admin_id = #{adminId,jdbcType=INTEGER}
    </update>
</mapper>